aff-executor-preload.c:affhooks_init()
[H[J[?25l[m[H[J[2;25HGNU GRUB  version 1.99-27+deb7u2

[m[4;2H+--------------------------------------------------------------------------+[5;2H|[5;77H|[6;2H|[6;77H|[7;2H|[7;77H|[8;2H|[8;77H|[9;2H|[9;77H|[10;2H|[10;77H|[11;2H|[11;77H|[12;2H|[12;77H|[13;2H|[13;77H|[14;2H|[14;77H|[15;2H|[15;77H|[16;2H|[16;77H|[17;2H+--------------------------------------------------------------------------+[m[18;2H[m
      Use the ^ and v keys to select which entry is highlighted.      
      Press enter to boot the selected OS, 'e' to edit the commands      
      before booting or 'c' for a command-line.      
      [5;78H [7m[5;3HDebian GNU/Linux, with Linux 3.2.0-4-amd64                               [m [5;76H[m[m[6;3HDebian GNU/Linux, with Linux 3.2.0-4-amd64 (recovery mode)               [m [6;76H[m[m[7;3H                                                                         [m [7;76H[m[m[8;3H                                                                         [m [8;76H[m[m[9;3H                                                                         [m [9;76H[m[m[10;3H                                                                         [m [10;76H[m[m[11;3H                                                                         [m [11;76H[m[m[12;3H                                                                         [m [12;76H[m[m[13;3H                                                                         [m [13;76H[m[m[14;3H                                                                         [m [14;76H[m[m[15;3H                                                                         [m [15;76H[m[m[16;3H                                                                         [m [16;76H[m[16;78H [5;76H[22;1H   The highlighted entry will be executed automatically in 5s.                 [5;76H[22;1H   The highlighted entry will be executed automatically in 4s.                 [5;76H[22;1H   The highlighted entry will be executed automatically in 3s.                 [5;76H[22;1H   The highlighted entry will be executed automatically in 2s.                 [5;76H[22;1H   The highlighted entry will be executed automatically in 1s.                 [5;76H[22;1H   The highlighted entry will be executed automatically in 0s.                 [5;76H[?25h[H[J[H[J  Booting 'Debian GNU/Linux, with Linux 3.2.0-4-amd64'

Loading Linux 3.2.0-4-amd64 ...
Loading initial ramdisk ...
[    0.000000] Initializing cgroup subsys cpuset
[    0.000000] Initializing cgroup subsys cpu
[    0.000000] Linux version 3.2.0-4-amd64 (debian-kernel@lists.debian.org) (gcc version 4.6.3 (Debian 4.6.3-14) ) #1 SMP Debian 3.2.68-1+deb7u3
[    0.000000] Command line: BOOT_IMAGE=/boot/vmlinuz-3.2.0-4-amd64 root=UUID=e35ebd7f-2405-4c97-9c3e-26919d55a9e5 ro console=tty0 console=ttyS0,115200n8
[    0.000000] BIOS-provided physical RAM map:
[    0.000000]  BIOS-e820: 0000000000000000 - 000000000009fc00 (usable)
[    0.000000]  BIOS-e820: 000000000009fc00 - 00000000000a0000 (reserved)
[    0.000000]  BIOS-e820: 00000000000f0000 - 0000000000100000 (reserved)
[    0.000000]  BIOS-e820: 0000000000100000 - 00000000bfffe000 (usable)
[    0.000000]  BIOS-e820: 00000000bfffe000 - 00000000c0000000 (reserved)
[    0.000000]  BIOS-e820: 00000000feffc000 - 00000000ff000000 (reserved)
[    0.000000]  BIOS-e820: 00000000fffc0000 - 0000000100000000 (reserved)
[    0.000000]  BIOS-e820: 0000000100000000 - 0000000440000000 (usable)
[    0.000000] NX (Execute Disable) protection: active
[    0.000000] SMBIOS 2.4 present.
[    0.000000] No AGP bridge found
[    0.000000] last_pfn = 0x440000 max_arch_pfn = 0x400000000
[    0.000000] x86 PAT enabled: cpu 0, old 0x70406, new 0x7010600070106
[    0.000000] last_pfn = 0xbfffe max_arch_pfn = 0x400000000
[    0.000000] found SMP MP-table at [ffff8800000f0b10] f0b10
[    0.000000] Using GB pages for direct mapping
[    0.000000] init_memory_mapping: 0000000000000000-00000000bfffe000
[    0.000000] init_memory_mapping: 0000000100000000-0000000440000000
[    0.000000] RAMDISK: 36c6c000 - 3762e000
[    0.000000] ACPI: RSDP 00000000000f08e0 00014 (v00 BOCHS )
[    0.000000] ACPI: RSDT 00000000bffffcfc 00034 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.000000] ACPI: FACP 00000000bffff1c0 00074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.000000] ACPI: DSDT 00000000bfffe040 01180 (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.000000] ACPI: FACS 00000000bfffe000 00040
[    0.000000] ACPI: SSDT 00000000bffff234 00A00 (v01 BOCHS  BXPCSSDT 00000001 BXPC 00000001)
[    0.000000] ACPI: APIC 00000000bffffc34 00090 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.000000] ACPI: HPET 00000000bffffcc4 00038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.000000] No NUMA configuration found
[    0.000000] Faking a node at 0000000000000000-0000000440000000
[    0.000000] Initmem setup node 0 0000000000000000-0000000440000000
[    0.000000]   NODE_DATA [000000043fffb000 - 000000043fffffff]
[    0.000000] kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kvm-clock: cpu 0, msr 0:16a8741, boot clock
[    0.000000] Zone PFN ranges:
[    0.000000]   DMA      0x00000010 -> 0x00001000
[    0.000000]   DMA32    0x00001000 -> 0x00100000
[    0.000000]   Normal   0x00100000 -> 0x00440000
[    0.000000] Movable zone start PFN for each node
[    0.000000] early_node_map[3] active PFN ranges
[    0.000000]     0: 0x00000010 -> 0x0000009f
[    0.000000]     0: 0x00000100 -> 0x000bfffe
[    0.000000]     0: 0x00100000 -> 0x00440000
[    0.000000] ACPI: PM-Timer IO Port: 0xb008
[    0.000000] ACPI: LAPIC (acpi_id[0x00] lapic_id[0x00] enabled)
[    0.000000] ACPI: LAPIC (acpi_id[0x01] lapic_id[0x01] enabled)
[    0.000000] ACPI: LAPIC (acpi_id[0x02] lapic_id[0x02] enabled)
[    0.000000] ACPI: LAPIC (acpi_id[0x03] lapic_id[0x03] enabled)
[    0.000000] ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.000000] ACPI: IOAPIC (id[0x00] address[0xfec00000] gsi_base[0])
[    0.000000] IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.000000] ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.000000] Using ACPI (MADT) for SMP configuration information
[    0.000000] ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.000000] SMP: Allowing 4 CPUs, 0 hotplug CPUs
[    0.000000] PM: Registered nosave memory: 000000000009f000 - 00000000000a0000
[    0.000000] PM: Registered nosave memory: 00000000000a0000 - 00000000000f0000
[    0.000000] PM: Registered nosave memory: 00000000000f0000 - 0000000000100000
[    0.000000] PM: Registered nosave memory: 00000000bfffe000 - 00000000c0000000
[    0.000000] PM: Registered nosave memory: 00000000c0000000 - 00000000feffc000
[    0.000000] PM: Registered nosave memory: 00000000feffc000 - 00000000ff000000
[    0.000000] PM: Registered nosave memory: 00000000ff000000 - 00000000fffc0000
[    0.000000] PM: Registered nosave memory: 00000000fffc0000 - 0000000100000000
[    0.000000] Allocating PCI resources starting at c0000000 (gap: c0000000:3effc000)
[    0.000000] Booting paravirtualized kernel on KVM
[    0.000000] setup_percpu: NR_CPUS:512 nr_cpumask_bits:512 nr_cpu_ids:4 nr_node_ids:1
[    0.000000] PERCPU: Embedded 27 pages/cpu @ffff88043fc00000 s78912 r8192 d23488 u524288
[    0.000000] kvm-clock: cpu 0, msr 4:3fc12741, primary cpu clock
[    0.000000] KVM setup async PF for cpu 0
[    0.000000] kvm-stealtime: cpu 0, msr 43fc0cfc0
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 4133256
[    0.000000] Policy zone: Normal
[    0.000000] Kernel command line: BOOT_IMAGE=/boot/vmlinuz-3.2.0-4-amd64 root=UUID=e35ebd7f-2405-4c97-9c3e-26919d55a9e5 ro console=tty0 console=ttyS0,115200n8
[    0.000000] PID hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000000] xsave/xrstor: enabled xstate_bv 0x7, cntxt size 0x340
[    0.000000] Checking aperture...
[    0.000000] No AGP bridge found
[    0.000000] Memory: 16462372k/17825792k available (3434k kernel code, 1049036k absent, 314384k reserved, 3305k data, 580k init)
[    0.000000] Hierarchical RCU implementation.
[    0.000000] 	RCU dyntick-idle grace-period acceleration is enabled.
[    0.000000] NR_IRQS:33024 nr_irqs:712 16
[    0.000000] Console: colour VGA+ 80x25
[    0.000000] console [tty0] enabled
[    0.000000] console [ttyS0] enabled
[    0.000000] Detected 2199.998 MHz processor.
[    0.008000] Calibrating delay loop (skipped) preset value.. 4399.99 BogoMIPS (lpj=8799992)
[    0.008000] pid_max: default: 32768 minimum: 301
[    0.008000] Security Framework initialized
[    0.008010] AppArmor: AppArmor disabled by boot time parameter
[    0.010011] Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes)
[    0.015831] Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes)
[    0.017506] Mount-cache hash table entries: 256
[    0.020118] Initializing cgroup subsys cpuacct
[    0.021018] Initializing cgroup subsys memory
[    0.021939] Initializing cgroup subsys devices
[    0.022856] Initializing cgroup subsys freezer
[    0.024007] Initializing cgroup subsys net_cls
[    0.024929] Initializing cgroup subsys blkio
[    0.025865] Initializing cgroup subsys perf_event
[    0.026929] mce: CPU supports 10 MCE banks
[    0.029241] ACPI: Core revision 20110623
[    0.031430] Enabling x2apic
[    0.032001] Enabled x2apic
[    0.032007] Switched APIC routing to physical x2apic.
[    0.034228] ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.036006] CPU0: Intel(R) Xeon(R) CPU E5-4620 0 @ 2.20GHz stepping 07
[    0.040002] Performance Events: SandyBridge events, Intel PMU driver.
[    0.040002] ... version:                2
[    0.040002] ... bit width:              48
[    0.040002] ... generic registers:      4
[    0.040008] ... value mask:             0000ffffffffffff
[    0.041183] ... max period:             000000007fffffff
[    0.042379] ... fixed-purpose events:   3
[    0.043333] ... event mask:             000000070000000f
[    0.044456] NMI watchdog enabled, takes one hw-pmu counter.
[    0.045868] Booting Node   0, Processors  #1
[    0.064025] KVM setup async PF for cpu 1
[    0.064025] kvm-stealtime: cpu 1, msr 43fc8cfc0
[    0.069861] NMI watchdog enabled, takes one hw-pmu counter.
[    0.064025] kvm-clock: cpu 1, msr 4:3fc92741, secondary cpu clock
[    0.072231]  #2
[    0.092025] KVM setup async PF for cpu 2
[    0.092025] kvm-stealtime: cpu 2, msr 43fd0cfc0
[    0.094304] NMI watchdog enabled, takes one hw-pmu counter.
[    0.092025] kvm-clock: cpu 2, msr 4:3fd12741, secondary cpu clock
[    0.096216]  #3 Ok.
[    0.116030] KVM setup async PF for cpu 3
[    0.116030] kvm-stealtime: cpu 3, msr 43fd8cfc0
[    0.116030] kvm-clock: cpu 3, msr 4:3fd92741, secondary cpu clock
[    0.117913] NMI watchdog enabled, takes one hw-pmu counter.
[    0.122301] Brought up 4 CPUs
[    0.123012] Total of 4 processors activated (17599.98 BogoMIPS).
[    0.124649] devtmpfs: initialized
[    0.129347] print_constraints: dummy: 
[    0.129347] NET: Registered protocol family 16
[    0.130335] ACPI: bus type pci registered
[    0.132183] PCI: Using configuration type 1 for base access
[    0.134156] bio: create slab <bio-0> at 0
[    0.136181] ACPI: Added _OSI(Module Device)
[    0.137094] ACPI: Added _OSI(Processor Device)
[    0.138098] ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.139102] ACPI: Added _OSI(Processor Aggregator Device)
[    0.142792] ACPI: Interpreter enabled
[    0.144029] ACPI: (supports S0 S3 S4 S5)
[    0.145367] ACPI: Using IOAPIC for interrupt routing
[    0.150818] ACPI: No dock devices found.
[    0.151745] HEST: Table not found.
[    0.152027] PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.153976] ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.155342] pci_root PNP0A03:00: host bridge window [io  0x0000-0x0cf7]
[    0.156028] pci_root PNP0A03:00: host bridge window [io  0x0d00-0xadff]
[    0.157323] pci_root PNP0A03:00: host bridge window [io  0xae0f-0xaeff]
[    0.158600] pci_root PNP0A03:00: host bridge window [io  0xaf20-0xafdf]
[    0.160023] pci_root PNP0A03:00: host bridge window [io  0xafe4-0xffff]
[    0.161337] pci_root PNP0A03:00: host bridge window [mem 0x000a0000-0x000bffff]
[    0.164027] pci_root PNP0A03:00: host bridge window [mem 0xc0000000-0xfebfffff]
[    0.170783] pci 0000:00:01.3: quirk: [io  0xb000-0xb03f] claimed by PIIX4 ACPI
[    0.172037] pci 0000:00:01.3: quirk: [io  0xb100-0xb10f] claimed by PIIX4 SMB
[    0.188807]  pci0000:00: Unable to request _OSC control (_OSC support mask: 0x1e)
[    0.192624] ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)
[    0.194349] ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)
[    0.196030] ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)
[    0.197716] ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)
[    0.199390] ACPI: PCI Interrupt Link [LNKS] (IRQs *9)
[    0.200709] vgaarb: device added: PCI:0000:00:02.0,decodes=io+mem,owns=io+mem,locks=none
[    0.201746] vgaarb: loaded
[    0.202399] vgaarb: bridge control possible 0000:00:02.0
[    0.204065] PCI: Using ACPI for IRQ routing
[    0.205227] HPET: 3 timers in total, 0 timers will be used for per-cpu timer
[    0.206599] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.212026] hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.226368] Switching to clocksource kvm-clock
[    0.226368] pnp: PnP ACPI init
[    0.226766] ACPI: bus type pnp registered
[    0.228542] pnp: PnP ACPI: found 9 devices
[    0.229434] ACPI: ACPI bus type pnp unregistered
[    0.240474] NET: Registered protocol family 2
[    0.244296] IP route cache hash table entries: 524288 (order: 10, 4194304 bytes)
[    0.247960] TCP established hash table entries: 524288 (order: 11, 8388608 bytes)
[    0.252325] TCP bind hash table entries: 65536 (order: 8, 1048576 bytes)
[    0.254279] TCP: Hash tables configured (established 524288 bind 65536)
[    0.255580] TCP reno registered
[    0.256372] UDP hash table entries: 8192 (order: 6, 262144 bytes)
[    0.257594] UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes)
[    0.259201] NET: Registered protocol family 1
[    0.260177] pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.261370] pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.262580] pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.263863] Unpacking initramfs...
[    3.484598] Freeing initrd memory: 9992k freed
[    3.488332] PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    3.489653] Placing 64MB software IO TLB between ffff8800bbffe000 - ffff8800bfffe000
[    3.491263] software IO TLB at phys 0xbbffe000 - 0xbfffe000
[    3.493675] audit: initializing netlink socket (disabled)
[    3.494891] type=2000 audit(1483386196.492:1): initialized
[    3.511563] HugeTLB registered 2 MB page size, pre-allocated 0 pages
[    3.515470] VFS: Disk quotas dquot_6.5.2
[    3.516477] Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    3.517878] msgmni has been set to 32172
[    3.519271] alg: No test for stdrng (krng)
[    3.520443] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)
[    3.521992] io scheduler noop registered
[    3.522864] io scheduler deadline registered
[    3.523850] io scheduler cfq registered (default)
[    3.525021] pci_hotplug: PCI Hot Plug PCI Core version: 0.5
[    3.526151] pciehp: PCI Express Hot Plug Controller Driver version: 0.4
[    3.527412] acpiphp: ACPI Hot Plug PCI Controller Driver version: 0.5
[    3.528736] acpiphp: Slot [3] registered
[    3.529596] acpiphp: Slot [4] registered
[    3.530524] acpiphp: Slot [5] registered
[    3.531379] acpiphp: Slot [6] registered
[    3.532291] acpiphp: Slot [7] registered
[    3.533166] acpiphp: Slot [8] registered
[    3.534030] acpiphp: Slot [9] registered
[    3.534891] acpiphp: Slot [10] registered
[    3.535754] acpiphp: Slot [11] registered
[    3.536673] acpiphp: Slot [12] registered
[    3.537546] acpiphp: Slot [13] registered
[    3.538458] acpiphp: Slot [14] registered
[    3.539338] acpiphp: Slot [15] registered
[    3.540228] acpiphp: Slot [16] registered
[    3.541107] acpiphp: Slot [17] registered
[    3.541968] acpiphp: Slot [18] registered
[    3.542889] acpiphp: Slot [19] registered
[    3.543756] acpiphp: Slot [20] registered
[    3.544661] acpiphp: Slot [21] registered
[    3.545539] acpiphp: Slot [22] registered
[    3.546435] acpiphp: Slot [23] registered
[    3.547296] acpiphp: Slot [24] registered
[    3.548180] acpiphp: Slot [25] registered
[    3.549049] acpiphp: Slot [26] registered
[    3.549933] acpiphp: Slot [27] registered
[    3.550795] acpiphp: Slot [28] registered
[    3.551679] acpiphp: Slot [29] registered
[    3.552585] acpiphp: Slot [30] registered
[    3.553472] acpiphp: Slot [31] registered
[    3.554519] ERST: Table is not found!
[    3.555327] GHES: HEST is not enabled!
[    3.556332] Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    3.579163] serial8250: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[    3.614886] 00:06: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
[    3.616386] Linux agpgart interface v0.103
[    3.617419] i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.619839] serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.620872] serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.622122] mousedev: PS/2 mouse device common for all mice
[    3.623535] input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input0
[    3.625340] rtc_cmos 00:01: RTC can wake from S4
[    3.626797] rtc_cmos 00:01: rtc core: registered rtc_cmos as rtc0
[    3.628405] rtc0: alarms up to one day, 114 bytes nvram, hpet irqs
[    3.629631] cpuidle: using governor ladder
[    3.630543] cpuidle: using governor menu
[    3.631585] TCP cubic registered
[    3.632738] NET: Registered protocol family 10
[    3.634233] Mobile IPv6
[    3.634876] NET: Registered protocol family 17
[    3.635777] Registering the dns_resolver key type
[    3.636880] registered taskstats version 1
[    3.638726] rtc_cmos 00:01: setting system clock to 2017-01-02 19:43:17 UTC (1483386197)
[    3.640396] Initializing network drop monitor service
[    3.642963] Freeing unused kernel memory: 580k freed
[    3.644158] Write protecting the kernel read-only data: 6144k
[    3.647773] Freeing unused kernel memory: 644k freed
[    3.651308] Freeing unused kernel memory: 688k freed
Loading, please wait...
[    3.665038] udevd[58]: starting version 175
[    3.686553] SCSI subsystem initialized
[    3.688396] e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI
[    3.689842] e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.691552] ACPI: PCI Interrupt Link [LNKC] enabled at IRQ 11
[    3.697479] Floppy drive(s): fd0 is 1.44M
[    3.712708] FDC 0 is a S82078B
[    4.037841] e1000 0000:00:03.0: eth0: (PCI:33MHz:32-bit) 52:54:00:12:34:56
[    4.039264] e1000 0000:00:03.0: eth0: Intel(R) PRO/1000 Network Connection
[    4.041940] scsi0 : ata_piix
[    4.043041] scsi1 : ata_piix
[    4.043867] ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    4.045234] ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    4.201286] ata1.00: ATA-7: QEMU HARDDISK, 2.0.0, max UDMA/100
[    4.202684] ata1.00: 9011200 sectors, multi 16: LBA48 
[    4.203894] ata2.00: ATAPI: QEMU DVD-ROM, 2.0.0, max UDMA/100
[    4.205762] ata1.00: configured for MWDMA2
[    4.206845] ata2.00: configured for MWDMA2
[    4.206928] scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.0. PQ: 0 ANSI: 5
[    4.210027] scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.0. PQ: 0 ANSI: 5
[    4.216348] sd 0:0:0:0: [sda] 9011200 512-byte logical blocks: (4.61 GB/4.29 GiB)
[    4.217039] sr0: scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.217041] cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.220768] sd 0:0:0:0: [sda] Write Protect is off
[    4.222027] sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.224861]  sda: sda1
[    4.225781] sd 0:0:0:0: [sda] Attached SCSI disk
[    4.228714] sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.229873] sr 1:0:0:0: Attached scsi generic sg1 type 5
[    7.311415] Refined TSC clocksource calibration: 2199.955 MHz.
Begin: Loading essential drivers ... done.
Begin: Running /scripts/init-premount ... done.
Begin: Mounting root file system ... Begin: Running /scripts/local-top ... done.
Begin: Running /scripts/local-premount ... done.
[    7.680272] EXT4-fs (sda1): mounted filesystem with ordered data mode. Opts: (null)
Begin: Running /scripts/local-bottom ... done.
done.
Begin: Running /scripts/init-bottom ... done.
INIT: version 2.88 booting
[[36minfo[39;49m] Using makefile-style concurrent boot in runlevel S.
findfs: unable to resolve 'UUID="e35ebd7f-2405-4c97-9c3e-26919d55a9e5"'
[....] Starting the hotplug events dispatcher: udevd[    7.969955] udevd[309]: starting version 175
[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0c.
[....] Synthesizing the initial hotplug events...[    8.006990] input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input1
[    8.008820] ACPI: Power Button [PWRF]
[    8.022753] input: PC Speaker as /devices/platform/pcspkr/input/input2
[?25l[?1c[    8.029018] piix4_smbus 0000:00:01.3: SMBus Host Controller at 0xb100, revision 0
7[1G[[32m ok [39;49m8[?25h[?0cdone.
[    8.071075] alg: No test for __gcm-aes-aesni (__driver-gcm-aes-aesni)
[    8.081980] Error: Driver 'pcspkr' is already registered, aborting...
[    8.099745] parport_pc 00:05: reported by Plug and Play ACPI
[    8.155347] parport0: PC-style at 0x378, irq 7 [PCSPP,TRISTATE]
[....] Waiting for /dev to be fully populated...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
findfs: unable to resolve 'UUID="e35ebd7f-2405-4c97-9c3e-26919d55a9e5"'
[....] Activating swap...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
Usage: mountpoint [-q] [-d] [-x] path
[   11.420645] EXT4-fs (sda1): re-mounted. Opts: (null)
[....] Checking root file system...fsck from util-linux 2.20.1
/run/rootdev: clean, 32669/264000 files, 885549/1054720 blocks
[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[   11.460445] EXT4-fs (sda1): re-mounted. Opts: errors=remount-ro,errors=remount-ro
[....] Cleaning up temporary files... /tmp[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0c.
findfs: unable to resolve 'UUID="e35ebd7f-2405-4c97-9c3e-26919d55a9e5"'
[   11.553224] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
findfs: unable to resolve 'UUID="e35ebd7f-2405-4c97-9c3e-26919d55a9e5"'
[....] Activating lvm and md swap...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Checking file systems...fsck from util-linux 2.20.1
[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Mounting local filesystems...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Activating swapfile swap...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
findfs: unable to resolve 'UUID="e35ebd7f-2405-4c97-9c3e-26919d55a9e5"'
[....] Cleaning up temporary files...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0c.
[....] Setting kernel variables ...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Configuring network interfaces...Internet Systems Consortium DHCP Client 4.2.2
Copyright 2004-2011 Internet Systems Consortium.
All rights reserved.
For info, please visit https://www.isc.org/software/dhcp/

[   11.953035] ADDRCONF(NETDEV_UP): eth0: link is not ready
Listening on LPF/eth0/52:54:00:12:34:56
Sending on   LPF/eth0/52:54:00:12:34:56
Sending on   Socket/fallback
DHCPDISCOVER on eth0 to 255.255.255.255 port 67 interval 3
DHCPDISCOVER on eth0 to 255.255.255.255 port 67 interval 6
[   19.347949] e1000: eth0 NIC Link is Up 1000 Mbps Full Duplex, Flow Control: RX
[   19.351303] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
DHCPDISCOVER on eth0 to 255.255.255.255 port 67 interval 10
DHCPREQUEST on eth0 to 255.255.255.255 port 67
DHCPOFFER from 10.0.2.2
DHCPACK from 10.0.2.2
bound to 10.0.2.15 -- renewal in 37958 seconds.
ifup: interface eth0 already configured
[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Cleaning up temporary files...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0c.
INIT: Entering runlevel: 2
[[36minfo[39;49m] Using makefile-style concurrent boot in runlevel 2.
[....] Starting OpenBSD Secure Shell server: sshd[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0c.
Entering benchmark mode
./scaff/bin/uniform/stream_d0
STARTING stream_d0 execution: Mon Jan  2 21:43:37 EET 2017
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 56869 microseconds.
   (= 56869 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11167.3       1457.3    0.548974    0.071638     3.087231
Scale:          11105.3       1455.9    0.549483    0.072038     3.088539
Add:            12912.9      12586.2    0.095342    0.092930     0.097872
Triad:          12979.2       4737.9    0.253279    0.092456     3.106593
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 59200 microseconds.
   (= 59200 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11202.5      11104.1    0.072045    0.071413     0.075003
Scale:          11117.1      11040.5    0.072460    0.071961     0.076209
Add:            12929.1       1149.2    1.044230    0.092814     3.106628
Triad:          12965.6      12899.9    0.093024    0.092553     0.096408
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 55745 microseconds.
   (= 55745 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11254.1      11192.5    0.071476    0.071085     0.071753
Scale:          11175.5       1461.8    0.547261    0.071585     3.085077
Add:            13043.9       1652.0    0.726383    0.091997     3.103578
Triad:          13043.3      12992.6    0.092360    0.092001     0.092856
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 56231 microseconds.
   (= 56231 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11180.7      11102.0    0.072059    0.071552     0.074703
Scale:          11115.9        781.7    1.023359    0.071969     3.086119
Add:            12924.3      12825.2    0.093566    0.092848     0.097081
Triad:          12993.5      12878.1    0.093181    0.092354     0.096775
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 55702 microseconds.
   (= 55702 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11186.0        781.9    1.023096    0.071518     3.084836
Scale:          11169.9      11012.8    0.072643    0.071621     0.075518
Add:            12941.5      12783.9    0.093868    0.092725     0.097287
Triad:          13005.1      12822.2    0.093588    0.092272     0.098268
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 55835 microseconds.
   (= 55835 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11282.2      11044.4    0.072435    0.070908     0.075190
Scale:          11086.9      10986.8    0.072814    0.072157     0.076216
Add:            12919.5       2920.2    0.410924    0.092883     3.103753
Triad:          12932.7       1649.1    0.727659    0.092788     3.106476
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 56006 microseconds.
   (= 56006 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11247.2      11172.5    0.071604    0.071129     0.071937
Scale:          11129.5       3469.3    0.230592    0.071881     3.083869
Add:            13025.1       1354.0    0.886268    0.092130     3.120540
Triad:          13017.0      12966.9    0.092543    0.092187     0.092858
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 55783 microseconds.
   (= 55783 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11873.9      11453.1    0.069850    0.067375     0.071701
Scale:          11817.9       1135.9    0.704305    0.067694     3.085882
Add:            13624.1       4803.9    0.249796    0.088079     3.106514
Triad:          13652.5       3972.8    0.302052    0.087896     2.098145
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50724 microseconds.
   (= 50724 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11894.0       4611.1    0.173493    0.067261     2.078826
Scale:          11843.3       4607.2    0.173641    0.067549     2.076329
Add:            13686.3       4858.2    0.247005    0.087679     2.102973
Triad:          13759.3       8535.4    0.140591    0.087214     1.092265
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50712 microseconds.
   (= 50712 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11908.1       6635.6    0.120562    0.067181     1.072284
Scale:          11866.6       6609.7    0.121035    0.067416     1.073679
Add:            13654.2       6185.7    0.193996    0.087885     1.093063
Triad:          13719.1       8522.6    0.140802    0.087469     1.092441
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50664 microseconds.
   (= 50664 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11869.1       4613.2    0.173415    0.067402     1.072236
Scale:          11832.6       6617.4    0.120894    0.067610     1.073027
Add:            13649.2       8504.5    0.141102    0.087917     1.092465
Triad:          13706.8       8527.6    0.140720    0.087548     1.092423
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50658 microseconds.
   (= 50658 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11901.4       4613.1    0.173418    0.067219     1.074728
Scale:          11821.7       6621.4    0.120820    0.067672     1.072339
Add:            13657.6       6190.8    0.193836    0.087863     1.093034
Triad:          13719.5       8533.7    0.140618    0.087467     1.092280
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50103 microseconds.
   (= 50103 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11892.4       4615.7    0.173323    0.067270     1.072310
Scale:          11833.4       4605.8    0.173695    0.067605     1.072537
Add:            13667.6       8512.3    0.140973    0.087799     1.092841
Triad:          13719.3       8530.7    0.140668    0.087468     1.092081
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50594 microseconds.
   (= 50594 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11880.4       6638.4    0.120511    0.067338     1.072239
Scale:          11828.2       4606.9    0.173654    0.067635     1.072625
Add:            13662.3       6189.6    0.193872    0.087833     1.092694
Triad:          13708.3       8502.7    0.141131    0.087538     1.092039
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50847 microseconds.
   (= 50847 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11886.4       6641.7    0.120451    0.067304     1.072107
Scale:          11812.8       4603.0    0.173801    0.067723     1.072630
Add:            13656.4       8508.3    0.141039    0.087871     1.092544
Triad:          13716.2       6199.8    0.193554    0.087488     1.092470
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50736 microseconds.
   (= 50736 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11937.1       6635.3    0.120568    0.067018     1.072182
Scale:          11822.1       4603.4    0.173783    0.067670     1.072692
Add:            13636.4       6185.1    0.194015    0.088000     1.093017
Triad:          13819.3       8522.9    0.140797    0.086835     1.093916
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50222 microseconds.
   (= 50222 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11898.4       6635.7    0.120559    0.067236     1.071926
Scale:          11831.5       6611.9    0.120995    0.067616     1.072893
Add:            13666.6       4864.0    0.246709    0.087805     1.092640
Triad:          13696.4       8527.6    0.140719    0.087614     1.093195
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50289 microseconds.
   (= 50289 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11946.5       6631.7    0.120632    0.066965     1.072428
Scale:          11808.6       6613.4    0.120966    0.067747     1.072295
Add:            13654.2       4866.8    0.246567    0.087885     1.092342
Triad:          13776.3       8542.3    0.140478    0.087106     1.091841
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50643 microseconds.
   (= 50643 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11841.0       6634.5    0.120582    0.067562     1.072451
Scale:          11825.4       6604.8    0.121124    0.067651     1.072462
Add:            13667.5       8517.2    0.140891    0.087800     1.092733
Triad:          13725.1       4873.9    0.246211    0.087431     1.092188
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50528 microseconds.
   (= 50528 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11867.7       6632.3    0.120621    0.067410     1.071825
Scale:          11830.3       6592.0    0.121359    0.067623     1.080166
Add:            13650.5       6190.6    0.193842    0.087909     1.092404
Triad:          13744.3       6203.1    0.193453    0.087309     1.092120
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50647 microseconds.
   (= 50647 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11842.9       4610.6    0.173515    0.067551     1.072537
Scale:          11795.4       6603.0    0.121158    0.067823     1.073062
Add:            13655.5       8515.5    0.140919    0.087877     1.092727
Triad:          13716.8       6206.0    0.193360    0.087484     1.092499
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50992 microseconds.
   (= 50992 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11866.1       6631.8    0.120630    0.067419     1.072501
Scale:          11786.8       6607.6    0.121072    0.067873     1.073190
Add:            13659.8       8502.3    0.141138    0.087849     1.092860
Triad:          13692.2       4867.5    0.246532    0.087641     1.092727
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 50508 microseconds.
   (= 50508 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11848.7       4609.9    0.173538    0.067518     1.073046
Scale:          11796.6       6608.4    0.121058    0.067816     1.073812
Add:            13664.2       8516.1    0.140910    0.087821     1.092193
Triad:          13803.8       6205.7    0.193372    0.086933     1.092450
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 50000000 (elements), Offset = 0 (elements)
Memory per array = 381.5 MiB (= 0.4 GiB).
Total memory required = 1144.4 MiB (= 1.1 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 4
Number of Threads counted = 4
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 52109 microseconds.
   (= 52109 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate  Avg Rate   MB/s  Avg time     Min time     Max time
Copy:           11903.7       4599.4    0.173936    0.067206     1.080956
Scale:          11848.5       6610.0    0.121028    0.067519     1.073380
Add:            13670.7       6177.4    0.194256    0.087779     1.099082
Triad:          13744.0       8526.1    0.140744    0.087311     1.095197
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
INIT: Switching to runlevel: 0INIT: Sending processes the TERM signal
[[36minfo[39;49m] Using makefile-style concurrent boot in runlevel 0.
[[36minfo[39;49m] Saving the system clock.
[[36minfo[39;49m] Hardware Clock updated to Mon Jan  2 19:51:21 UTC 2017.
[....] Asking all remaining processes to terminate...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] All processes ended within 2 seconds...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Deconfiguring network interfaces...Internet Systems Consortium DHCP Client 4.2.2
Copyright 2004-2011 Internet Systems Consortium.
All rights reserved.
For info, please visit https://www.isc.org/software/dhcp/

Listening on LPF/eth0/52:54:00:12:34:56
Sending on   LPF/eth0/52:54:00:12:34:56
Sending on   Socket/fallback
DHCPRELEASE on eth0 to 10.0.2.2 port 67
[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[....] Deactivating swap...[?25l[?1c7[1G[[32m ok [39;49m8[?25h[?0cdone.
[  488.471766] EXT4-fs (sda1): re-mounted. Opts: (null)
[[36minfo[39;49m] Will now halt.
[  490.509127] sd 0:0:0:0: [sda] Synchronizing SCSI cache
[  490.513441] sd 0:0:0:0: [sda] Stopping disk
[  490.519148] ACPI: Preparing to enter system sleep state S5
[  490.521442] Power down.
aff-executor-preload.c:affhooks_init()
aff-executor-preload.c:affhooks_shut()
HELLO KITTY
